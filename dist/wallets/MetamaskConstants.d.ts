export declare const RestrictedMethods: Readonly<{
    readonly eth_accounts: "eth_accounts";
    readonly snap_dialog: "snap_dialog";
    readonly snap_notify: "snap_notify";
    readonly snap_manageState: "snap_manageState";
    readonly snap_getBip32PublicKey: "snap_getBip32PublicKey";
    readonly snap_getBip32Entropy: "snap_getBip32Entropy";
    readonly snap_getBip44Entropy: "snap_getBip44Entropy";
    readonly snap_getEntropy: "snap_getEntropy";
    readonly wallet_snap: "wallet_snap";
    readonly snap_manageAccounts: "snap_manageAccounts";
}>;
export declare const MESSAGE_TYPE: {
    readonly ADD_ETHEREUM_CHAIN: "wallet_addEthereumChain";
    readonly ETH_ACCOUNTS: "eth_accounts";
    readonly ETH_DECRYPT: "eth_decrypt";
    readonly ETH_GET_ENCRYPTION_PUBLIC_KEY: "eth_getEncryptionPublicKey";
    readonly ETH_REQUEST_ACCOUNTS: "eth_requestAccounts";
    readonly ETH_SIGN: "eth_sign";
    readonly ETH_SIGN_TYPED_DATA: "eth_signTypedData";
    readonly ETH_SIGN_TYPED_DATA_V3: "eth_signTypedData_v3";
    readonly ETH_SIGN_TYPED_DATA_V4: "eth_signTypedData_v4";
    readonly GET_PROVIDER_STATE: "metamask_getProviderState";
    readonly LOG_WEB3_SHIM_USAGE: "metamask_logWeb3ShimUsage";
    readonly PERSONAL_SIGN: "personal_sign";
    readonly SEND_METADATA: "metamask_sendDomainMetadata";
    readonly SWITCH_ETHEREUM_CHAIN: "wallet_switchEthereumChain";
    readonly TRANSACTION: "transaction";
    readonly WALLET_REQUEST_PERMISSIONS: "wallet_requestPermissions";
    readonly WATCH_ASSET: "wallet_watchAsset";
    readonly WATCH_ASSET_LEGACY: "metamask_watchAsset";
    readonly SNAP_DIALOG_ALERT: "snap_dialog:alert";
    readonly SNAP_DIALOG_CONFIRMATION: "snap_dialog:confirmation";
    readonly SNAP_DIALOG_PROMPT: "snap_dialog:prompt";
    readonly MMI_AUTHENTICATE: "metamaskinstitutional_authenticate";
    readonly MMI_REAUTHENTICATE: "metamaskinstitutional_reauthenticate";
    readonly MMI_REFRESH_TOKEN: "metamaskinstitutional_refresh_token";
    readonly MMI_SUPPORTED: "metamaskinstitutional_supported";
    readonly MMI_PORTFOLIO: "metamaskinstitutional_portfolio";
    readonly MMI_OPEN_SWAPS: "metamaskinstitutional_open_swaps";
    readonly MMI_CHECK_IF_TOKEN_IS_PRESENT: "metamaskinstitutional_checkIfTokenIsPresent";
    readonly MMI_SET_ACCOUNT_AND_NETWORK: "metamaskinstitutional_setAccountAndNetwork";
    readonly MMI_OPEN_ADD_HARDWARE_WALLET: "metamaskinstitutional_openAddHardwareWallet";
};
